{"version":3,"sources":["components/context/GameContext.js","components/Square.js","components/Board.js","components/Game.js","helper.js","components/App.js","index.js"],"names":["GameContext","React","createContext","GameProvider","props","useState","Array","fill","board","setBoard","xIsNext","setXIsNext","winner","setWinner","boardHistory","setBoardHistory","step","setStep","Provider","value","children","Square","index","useContext","className","data-testid","onClick","i","newBoard","slice","handleClick","Board","squares","map","square","renderSquares","Game","useEffect","lines","length","a","b","c","calculateWinner","console","log","jumpTo","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.daa0de80.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const GameContext = React.createContext();\r\n\r\nexport const GameProvider = (props) => {\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [winner, setWinner] = useState(null);\r\n    const [boardHistory, setBoardHistory] = useState([board]);\r\n    const [step, setStep] = useState(0);\r\n\r\n  return (\r\n    <GameContext.Provider\r\n      value={[board, setBoard, xIsNext, setXIsNext,winner, setWinner, boardHistory, setBoardHistory, step, setStep]}\r\n    >\r\n      {props.children}\r\n    </GameContext.Provider>\r\n  );\r\n};","import React, { useContext, useState } from \"react\";\r\nimport { GameContext } from \"./context/GameContext\";\r\n\r\nconst Square = ({ index }) => {\r\n  const [\r\n    board,\r\n    setBoard,\r\n    xIsNext,\r\n    ,\r\n    winner,\r\n    ,\r\n    boardHistory,\r\n    setBoardHistory,\r\n    step,\r\n    setStep,\r\n  ] = useContext(GameContext);\r\n\r\n  const handleClick = (i) => {\r\n    const newBoard = [...board];\r\n    if (winner || newBoard[i]) return;\r\n\r\n    newBoard[i] = xIsNext ? \"X\" : \"O\";\r\n    setBoard(newBoard);\r\n    // console.log('Square step, history.len', step,boardHistory.length )\r\n    // if (step < boardHistory.length-1) {\r\n    //   setBoardHistory(boardHistory.slice(0, step+1));\r\n    // } else {\r\n      setBoardHistory([...boardHistory.slice(0, step+1), newBoard]);\r\n      setStep(step + 1);\r\n    // }\r\n    \r\n  };\r\n  return (\r\n    <button className=\"square\" data-testid={index} onClick={() => handleClick(index)}>\r\n      {board[index]}\r\n    </button>\r\n  );\r\n};\r\nexport default Square;\r\n","import React from \"react\";\r\n\r\nimport Square from \"./Square\";\r\n\r\nconst Board = ({ squares }) => {\r\n  const renderSquares = (squares) =>\r\n    squares.map((square, i) => <Square key={i} index={i} />);\r\n\r\n  return <div className=\"board\">{renderSquares(squares)}</div>;\r\n};\r\n\r\nexport default Board;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport Board from \"./Board\";\r\nimport { GameContext } from \"./context/GameContext\";\r\nimport { calculateWinner } from \"../helper\";\r\nimport './style.css';\r\n\r\nconst Game = () => {\r\n  const [board, setBoard, xIsNext, setXIsNext,winner, setWinner, boardHistory, setBoardHistory, step, setStep] = useContext(GameContext);\r\n// const winner = calculateWinner(board);\r\n\r\n  \r\n  useEffect(() => {\r\n      setWinner(calculateWinner(board));\r\n      console.log('!winner', !winner)\r\n    if (!winner){\r\n        console.log('ste step%2', step, step%2)\r\n        setXIsNext(step%2?false:true);\r\n        \r\n    }\r\n        \r\n  }, [board]);\r\n\r\n  const renderHistory = ()=>{\r\n    return boardHistory.map((step, index)=>{\r\n        return <button key={index} className='step' onClick={()=>jumpTo(index)}>Move {index}</button>\r\n    })\r\n  }\r\n\r\n  const jumpTo = (index) => {\r\n      console.log(index)\r\n    setBoard(boardHistory[index])\r\n    setStep(index);\r\n  };\r\n  const renderGameStatus= ()=>{\r\n      if (winner){\r\n          return `Winner ${winner[0]}`\r\n      } else if(step >=9){\r\n          return 'Game is a Draw'\r\n      }\r\n\r\n    return `NextPlayer ${xIsNext ? \"X\" : \"O\"}`\r\n  }\r\n  return (\r\n    <div className='game'>\r\n      <Board squares={board}  />\r\n      <div className='history'>\r\n        <p>{renderGameStatus()}</p>\r\n        {renderHistory()}\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\nexport default Game;\r\n","export const calculateWinner = (squares) => {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return [squares[a], a, b, c];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n  ","import React from 'react';\r\nimport Game from './Game';\r\nimport {GameProvider} from './context/GameContext';\r\n\r\nconst App = ()=><GameProvider><Game/></GameProvider>\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}